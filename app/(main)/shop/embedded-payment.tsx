"use client";

import { useEffect, useState } from "react";

type Props = {
  checkoutUrl: string;
  onClose: () => void; // H√†m callback ƒë·ªÉ ƒë√≥ng giao di·ªán
};

const EmbeddedPayment = ({ checkoutUrl, onClose }: Props) => {
  const [isOpen, setIsOpen] = useState(true);

  useEffect(() => {
    if (!checkoutUrl) {
      setIsOpen(false);
    } else {
      // üõ† M·ªü trang thanh to√°n trong tab m·ªõi thay v√¨ nh√∫ng iframe
      const paymentWindow = window.open(checkoutUrl, "_blank");
      if (!paymentWindow) {
        alert("‚ö† Tr√¨nh duy·ªát ƒë√£ ch·∫∑n c·ª≠a s·ªï popup. H√£y cho ph√©p m·ªü c·ª≠a s·ªï m·ªõi.");
      } else {
        setIsOpen(false);
      }
    }
  }, [checkoutUrl]);

  const handleClose = () => {
    setIsOpen(false);
    if (onClose) onClose(); // Reset l·∫°i tr·∫°ng th√°i checkout
    window.location.reload(); // Reload trang ƒë·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i Subscription
  };

  return isOpen ? (
    <div className="w-full max-w-lg mx-auto p-4 bg-white rounded-lg shadow-lg mt-4">
      <h2 className="text-center text-xl font-bold">Thanh to√°n</h2>
      <p className="text-center text-gray-600">
        C·ª≠a s·ªï thanh to√°n ƒë√£ ƒë∆∞·ª£c m·ªü. N·∫øu b·∫°n kh√¥ng th·∫•y, h√£y ki·ªÉm tra popup tr√¨nh duy·ªát.
      </p>
      <button
        className="w-full mt-4 bg-red-500 text-white py-2 rounded"
        onClick={handleClose}
      >
        ƒê√≥ng
      </button>
    </div>
  ) : null;
};

export default EmbeddedPayment;
